TODO:
    - lexer:
        - fix spacing. "12i12i12i" should
            return [(Complex (0,12), "12i12i")]
        - fix weird spacing
    - add tests for order of operations
    - implement matrix module

DONE:
    - lexer:
        - fix Parse.Types, add sub-types (num contains number,float,etc.)
        - implement:
            - funcall
            - complex
            - int
            - matrix
            - array
            - operations
            - paren
            - assignment
        - lexer blueprint
        - generate parse tree
        - make defun not use parseFcall.  `f(1,2,3,4) = 7` is invalid
        - implement operator precidence (PEMDAS)
    - state:
        - create container for state
    - walk parse tree
    - make types and functions work
    - fix assignment so ```a=1 b=a a=5``` does not change b to 5
    - parse matrix from parse tree to Matrix type
    - implement operations
    - implement checks for matrix math && div/mod by 0
